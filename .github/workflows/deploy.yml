name: Deploy to S3 and CloudFront

on:
  push:
    branches: [master]  # change if your deploy branch is different

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      CF_DIST_ID: ${{ secrets.CF_DIST_ID }}
      NEXT_PUBLIC_EMAIL_URL: ${{ secrets.NEXT_PUBLIC_EMAIL_URL }}


    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üß± Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: üì¶ Install dependencies
        run: npm install

      - name: üèó Build site
        run: |
          npm run build

      - name: ‚òÅÔ∏è Deploy site to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete --exclude "images/*"
        env:
          NEXT_PUBLIC_EMAIL_URL: ${{ secrets.NEXT_PUBLIC_EMAIL_URL }}
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "out"

      - name: üöÄ Invalidate CloudFront Cache
        if: env.CF_DIST_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CF_DIST_ID }} \
            --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
